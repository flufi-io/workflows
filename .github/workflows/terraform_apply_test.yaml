name: terraform
on:
  issue_comment:
    types: [ created ]
permissions: write-all
env:
  VALID_ENVIRONMENTS: development,staging,production


jobs:
  validate_comment:
    uses: flufi-io/workflows/.github/workflows/valid_comment.yaml@main
    with:
      valid_environments: development,staging,production
      comment_body: ${{ github.event.comment.body }}

  terraform_plan:
    if: ${{ needs.validate_comment.outputs.operation == 'plan' }}
    needs: [ validate_comment ]
    uses: flufi-io/workflows/.github/workflows/terraform_plan.yaml@main
    secrets: inherit
    with:
      environment: ${{ needs.validate_comment.outputs.environment }}
      operation: ${{ needs.validate_comment.outputs.operation }}
      working-directory: terraform
      artifact_name: ${{ needs.validate_comment.outputs.artifact_name }}
      pr_number: ${{ needs.validate_comment.outputs.pr_number }}
      commit_sha: ${{ needs.validate_comment.outputs.commit_sha }}
      repo: ${{ needs.validate_comment.outputs.repo }}

  terraform_apply:
    needs: [validate_comment]
    if: ${{ needs.validate_comment.outputs.operation == 'apply' }}
    uses: flufi-io/workflows/.github/workflows/terraform_apply.yaml@main
    secrets: inherit
    with:
      environment: ${{ needs.validate_comment.outputs.environment }}
      operation: ${{ needs.validate_comment.outputs.operation }}
      working-directory: terraform
      artifact_name: ${{ needs.validate_comment.outputs.artifact_name }}
      pr_number: ${{ needs.validate_comment.outputs.pr_number }}
      commit_sha: ${{ needs.validate_comment.outputs.commit_sha }}
      repo: ${{ needs.validate_comment.outputs.repo }}
