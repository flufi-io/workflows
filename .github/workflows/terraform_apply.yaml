name: Terraform Apply

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment that was extracted from the comment'
        required: true
        type: string
      operation:
        description: 'The operation that was extracted from the comment'
        required: true
        type: string
      #      varsfile:
      #        description: 'The path to the vars file'
      #        required: true
      #        type: string
      working-directory:
        description: 'The path to the working directory'
        required: false
        default: '.'
        type: string
      repo:
        description: 'The repo that was extracted from the comment'
        required: true
        type: string
      pr_number:
        description: 'The PR number that was extracted from the comment'
        required: true
        type: string
      commit_sha:
        description: 'The commit sha that was extracted from the comment'
        required: true
        type: string
      artifact_name:
        description: 'The name of the artifact'
        required: true
        type: string
jobs:
  terraform_apply:
    if: ${{ inputs.operation == 'apply' }}
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.setup.outputs.artifact }}
    steps:
      - name: setup
        id: setup
        run: |
          echo "artifact_name=${{ inputs.artifact_name }}" >> $GITHUB_OUTPUT
          echo "artifact=${{ inputs.working-directory }}/${{ inputs.artifact_name }}" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
          terraform_wrapper: false

      - name: checkout
        uses: actions/checkout@v3
        with:
          ref:  refs/pull/${{ inputs.pr_number }}/head
          repository: ${{ inputs.repo }}

      - name: Download Terraform artifacts
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          search_artifacts: true
          name: ${{ steps.setup.outputs.artifact_name }}
        continue-on-error: false

      - name: install sops
        id: install-sops
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops_3.7.3_amd64.deb
          sudo dpkg -i sops_3.7.3_amd64.deb
          rm sops_3.7.3_amd64.deb
        continue-on-error: false

      - name: decrypt plan
        run: |
          sops -d -i ${{ steps.setup.outputs.artifact_name }}
        continue-on-error: false

      - name: extract plan
        run: |
          tar xzf ${{ steps.setup.outputs.artifact_name }}
          rm ${{ steps.setup.outputs.artifact_name }}
        continue-on-error: false

      - name: terraform apply
        id: terraform_apply
        run: |
          terraform init -reconfigure -upgrade
          terraform  ${{ inputs.operation }} -input=false -no-color -auto-approve tfplan
        continue-on-error: false
        working-directory: ${{ inputs.working-directory }}