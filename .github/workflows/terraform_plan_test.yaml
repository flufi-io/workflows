---
# This workflow is brought to you by Flufi LLC and is licensed under the MIT License. (c) 2024 Flufi LLC.
# All rights reserved.
# Please note that Flufi LLC owns the original version of this workflow,
# which can be found at https://github.com/flufi-io/workflows. Thank you for using our workflows!

name: terraform plan test
on:
  issue_comment:
    types: [ created ]

permissions:
  contents: read
  pull-requests: write
  id-token: write  # This is required to use the AWS Credentials

jobs:
  terraform_command_validation:
    # only runs if the comment is not from a bot and starts with /terraform
    # if: ${{ !contains(github.actor, 'bot') && contains(github.event.comment.body, '/terraform') }}
    # this ia a test workflow, so we want to run it on every PR event if the comment contains /terraform
    # triggered by terraform_plan_test_trigger.yaml
    if: ${{ startsWith(github.event.comment.body, '/terraform') }}
    uses: ./.github/workflows/valid_tf_command.yaml
    with:
      comment_body: ${{ github.event.comment.body }}

  terraform_plan:
    if: ${{ needs.terraform_command_validation.outputs.operation == 'plan' }}
    needs: [ terraform_command_validation ]
    uses: ./.github/workflows/terraform_plan.yaml
    with:
      environment: ${{ needs.terraform_command_validation.outputs.environment }}
      operation: ${{ needs.terraform_command_validation.outputs.operation }}
      working-directory: terraform
      artifact_name: ${{ needs.terraform_command_validation.outputs.artifact_name }}
      pr_number: ${{ needs.terraform_command_validation.outputs.pr_number }}
      commit_sha: ${{ needs.terraform_command_validation.outputs.commit_sha }}
      repo: ${{ needs.terraform_command_validation.outputs.repo }}
      env_vars: |
        TF_VAR_aws_region=sarasa
        TF_VAR_oidc_role=sarasa
    # secrets: inherit # This is required to use GITHUB_SECRETS as terraform secrets

  download_plan:
    runs-on: ubuntu-latest
    needs: [ terraform_command_validation, terraform_plan ]
    steps:
      - name: Download Terraform artifacts
        uses: actions/download-artifact@v4
        with:
          path: terraform/${{needs.terraform_command_validation.outputs.artifact_path}}
