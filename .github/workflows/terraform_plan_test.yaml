name: terraform
on:
  issue_comment:
    types: [ created ]
permissions: write-all
env:
  VALID_ENVIRONMENTS: development,staging,production





jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.comment.sha }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
          terraform_wrapper: false
      - name: Get associated open pull request
        id: get_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_data=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open" \
            | jq '.[] | select(.head.sha == ${{ github.event.comment.commit_id }}) | {number: .number, sha: .head.sha}')
          pr_number=$(echo "$pr_data" | jq '.number')
          commit_sha=$(echo "$pr_data" | jq '.sha')
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "COMMIT_SHA=$commit_sha" >> $GITHUB_ENV

      - name: Display PR number and commit SHA
        run: |
          echo "PR Number: $PR_NUMBER"
          echo "Commit SHA: $COMMIT_SHA"


  validate_comment:
    uses: flufi-io/workflows/.github/workflows/valid_comment.yaml@main
    with:
      valid_environments: development,staging,production
      comment_body: ${{ github.event.comment.body }}

  terraform_plan:
    uses: flufi-io/workflows/.github/workflows/terraform_plan.yaml@main
    with:
      environment: ${{ needs.validate_comment.outputs.environment }}
      operation: ${{ needs.validate_comment.outputs.operation }}
      varsfile: example.tfvars
      working-directory: terraform
      ref: ${{ github.event.comment.sha }}

  download_plan:
    runs-on: ubuntu-latest
    needs: [ terraform_plan ]
    steps:
      - name: Download Terraform artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.terraform_plan.outputs.name}}
          path: ${{needs.terraform_plan.outputs.path}}
