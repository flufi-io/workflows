name: Terraform Plan

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment that was extracted from the comment'
        required: true
        type: string
      operation:
        description: 'The operation that was extracted from the comment'
        required: true
        type: string
      varsfile:
        description: 'The path to the vars file'
        required: true
        type: string
      working-directory:
        description: 'The path to the working directory'
        required: false
        default: '.'
        type: string
      repo:
        description: 'The repo that was extracted from the comment'
        required: true
        type: string
      pr_number:
        description: 'The PR number that was extracted from the comment'
        required: true
        type: string
      commit_sha:
        description: 'The commit sha that was extracted from the comment'
        required: true
        type: string

    outputs:
      artifact_path:
        description: 'The path where the artifact is stored'
        value: ${{ jobs.terraform_plan.outputs.artifact_path }}


jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ inputs.commit_sha }}
      pr_number: ${{ inputs.pr_number }}
      repo: ${{ inputs.repo }}
      artifact_path: "${{ inputs.working-directory }}/artifacts-${{ inputs.commit_sha }}.tar.gz"
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
          terraform_wrapper: false

      - name: checkout
        uses: actions/checkout@v3
        with:
          ref:  refs/pull/${{ inputs.pr_number }}/head
          repository: ${{ inputs.repo }}

      - name: Terraform Init
        run: terraform init -input=false -no-color -upgrade -reconfigure
        working-directory: ${{ inputs.working-directory }}
        continue-on-error: false

      - name: Terraform Plan
        working-directory: ${{ inputs.working-directory }}
        run: terraform plan -out=tfplan -var-file=${{ inputs.environment }}.tfvars  -input=false -no-color
        continue-on-error: false

      - name: Save Terraform state and plan
        working-directory: ${{ inputs.working-directory }}
        id: save-artifact
        run: tar czf artifacts-${{ inputs.commit_sha }}.tar.gz .terraform tfplan
        continue-on-error: false

      - name: install sops
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops_3.7.3_amd64.deb
          sudo dpkg -i sops_3.7.3_amd64.deb
        continue-on-error: false

      - name: encrypt terraform plan
        id: encrypt
        run: |
         sops -e -i ${{ inputs.working-directory }}/${{ inputs.artifact_path }}
        continue-on-error: false

      - name: Upload Terraform artifacts
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ inputs.working-directory }}/${{ inputs.artifact_path }}
          retention-days: 1
        continue-on-error: false
