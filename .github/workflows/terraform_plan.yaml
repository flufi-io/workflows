name: Terraform Plan

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment that was extracted from the comment'
        required: true
        type: string
      operation:
        description: 'The operation that was extracted from the comment'
        required: true
        type: string
#      varsfile:
#        description: 'The path to the vars file'
#        required: true
#        type: string
      working-directory:
        description: 'The path to the working directory'
        required: false
        default: '.'
        type: string
      repo:
        description: 'The repo that was extracted from the comment'
        required: true
        type: string
      pr_number:
        description: 'The PR number that was extracted from the comment'
        required: true
        type: string
      commit_sha:
        description: 'The commit sha that was extracted from the comment'
        required: true
        type: string
      artifact_name:
        description: 'The name of the artifact'
        required: true
        type: string


jobs:
  terraform_plan:
    if: ${{ inputs.operation == 'plan' }}
    runs-on: ubuntu-latest
    outputs:
        artifact: ${{ steps.setup.outputs.artifact }}
    steps:
      - name: setup
        id: setup
        run: |
          echo "artifact_name=${{ inputs.artifact_name }}" >> $GITHUB_OUTPUT
          echo "artifact=${{ inputs.working-directory }}/${{ inputs.artifact_name }}" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
          terraform_wrapper: false

      - name: checkout
        uses: actions/checkout@v3
        with:
          ref:  refs/pull/${{ inputs.pr_number }}/head
          repository: ${{ inputs.repo }}

      - name: Terraform Init
        run: terraform init -input=false -no-color -upgrade -reconfigure
        working-directory: ${{ inputs.working-directory }}
        continue-on-error: false

      - name: Terraform Plan
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform plan -out=tfplan -var-file=${{ inputs.environment }}.tfvars  -input=false -no-color
          terraform show -no-color tfplan > plan_output.txt
        continue-on-error: false

      - name: Post Terraform plan output as PR comment
        id: terraform-plan-comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          plan_output=$(cat ${{ inputs.working-directory }}/plan_output.txt)
          max_comment_size=65535
          
          # Split the plan output into smaller chunks
          split_output=$(echo "$plan_output" | awk -v size="$max_comment_size" '{
            printf("%s%s",$0,RT)
            if (length > size) {
              print ""
              $0=$0
            }
          }')
          
          for chunk in "${split_output[@]}"; do
            gh pr comment ${{ inputs.pr_number }} --body "$chunk"
          done


      - name: Save Terraform state and plan
        id: save-artifact
        run: tar czf ${{ steps.setup.outputs.artifact }} ${{ inputs.working-directory }}/.terraform ${{ inputs.working-directory }}/tfplan
        continue-on-error: false

      - name: install sops
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops_3.7.3_amd64.deb
          sudo dpkg -i sops_3.7.3_amd64.deb
        continue-on-error: false

      - name: encrypt terraform plan
        id: encrypt
        run: |
         sops -e -i ${{ steps.setup.outputs.artifact }}
        continue-on-error: false

      - name: Upload Terraform artifacts
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.setup.outputs.artifact }}
          name: ${{ steps.setup.outputs.artifact_name }}
          retention-days: 1
        continue-on-error: false
