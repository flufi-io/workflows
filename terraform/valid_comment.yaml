name: Validate if comment is valid
on:
  workflow_call:
    inputs:
      valid_environments:
        description: 'A comma-separated list of valid environments'
        required: true
        type: string
      comment_body:
        description: 'The body of the comment that triggered the workflow'
        required: true
        type: string
    outputs:
        environment:
            description: 'The environment that was extracted from the comment'
            value: ${{ jobs.valid_operation.outputs.environment }}
        operation:
            description: 'The operation that was extracted from the comment'
            value: ${{ jobs.valid_operation.outputs.operation }}

jobs:
  valid_operation:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_environment.outputs.environment }}
      operation: ${{ steps.set_environment.outputs.operation }}
    steps:
      - name: Check if valid comment
        id: check_valid_comment
        run: |
          comment="${{ inputs.comment_body }}"
          num_words=$(echo "$comment" | wc -w)
          operation=$(echo "$comment" | awk '{print $1 " " $2}')
          environment=$(echo "$comment" | awk '{print $3}')
          if [ $num_words -eq 3 ] && ([ "$operation" == "terraform plan" ] || [ "$operation" == "terraform apply" ]) && (echo "${{ inputs.valid_environments }}" | grep -wq "$environment"); then
            echo "::set-output name=valid::true"
          else
            echo "::set-output name=valid::false"
          fi
      - name: Extract environment and operation from comment
        if: steps.check_valid_comment.outputs.valid == 'true'
        run: |
          export ENVIRONMENT=$(echo "${{ inputs.comment_body }}" | awk '{print $3}')
          export OPERATION=$(echo "${{ inputs.comment_body }}" | awk '{print $2}')
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "OPERATION=$OPERATION" >> $GITHUB_ENV
